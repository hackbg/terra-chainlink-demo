---
version: "3.6"

x-chain-adapter-def: &chain-adapter-def
  image: terra-adapter:0.0.1
  restart: on-failure
  networks:
    - terra

x-price-adapter-def: &price-adapter-def
  restart: on-failure
  environment:
    - "CACHE_ENABLED=true"
    - "EXPERIMENTAL_RATE_LIMIT_ENABLED=true"
    - "RATE_LIMIT_CAPACITY=60"
  networks:
    - terra

x-chainlink-node-def: &cl-node-def
  image: smartcontract/chainlink:0.10.12
  restart: on-failure
  depends_on:
    - postgres
  secrets:
    - node_password
    - apicredentials
  env_file:
    - ./chainlink.env
  volumes:
    - .:/host
  networks:
    - terra
  entrypoint:
    - chainlink
    - node
    - start
    - "-d"
    - "-p"
    - /run/secrets/node_password
    - "-a"
    - /run/secrets/apicredentials

x-ei-def: &ei-def
  image: terrademo/terra-ei
  command: '{\"name\":\"terra\",\"type\":\"terra\",\"url\":\"${WS_URL}\"}'
  depends_on:
    - postgres
  networks:
    - terra

services:
  postgres:
    image: postgres:13
    restart: on-failure
    environment:
      - POSTGRES_MULTIPLE_DATABASES=chainlink_1,chainlink_2,chainlink_3,ei_1,ei_2,ei_3,fcd
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - ./LocalTerra/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./docker-init-scripts/postgres:/docker-entrypoint-initdb.d
      - pg:/var/lib/postgresql/data
    networks:
      - terra

  terrad:
    image: terramoney/localterra-core:bombay
    pull_policy: always
    volumes:
      - ./LocalTerra/config:/root/.terra/config
    networks:
      - terra
    ports:
      - "26657:26657"
      - "1317:1317"
    command: terrad start

  fcd-collector:
    image: terramoney/fcd:1.0.0-alpha.12
    pull_policy: always
    depends_on:
      - terrad
      - postgres
    volumes:
      - ./LocalTerra/logs:/app/logs
    networks:
      - terra
    env_file: ./fcd.env
    command: collector

  oracle:
    image: terramoney/pseudo-feeder:bombay
    pull_policy: always
    depends_on:
      - terrad
    networks:
      - terra
    environment:
      TESTNET_LCD_URL: http://terrad:1317
    command: start

  fcd-api:
    image: terramoney/fcd:1.0.0-alpha.12
    pull_policy: always
    depends_on:
      - terrad
      - postgres
    volumes:
      - ./LocalTerra/logs:/app/logs
    networks:
      - terra
    ports:
      - "3060:3060"
    env_file: ./fcd.env
    command: start

  chainlink-node-1:
    <<: *cl-node-def
    ports:
      - "6691:6688"
    environment:
      - DATABASE_URL=postgresql://postgres@postgres:5432/chainlink_1?sslmode=disable

  chainlink-node-2:
    <<: *cl-node-def
    ports:
      - "6692:6688"
    environment:
      - DATABASE_URL=postgresql://postgres@postgres:5432/chainlink_2?sslmode=disable

  chainlink-node-3:
    <<: *cl-node-def
    ports:
      - "6693:6688"
    environment:
      - DATABASE_URL=postgresql://postgres@postgres:5432/chainlink_3?sslmode=disable

  external-initiator-1:
    <<: *ei-def
    environment:
      - EI_DATABASEURL=postgresql://postgres@postgres:5432/ei_1?sslmode=disable
      - EI_CHAINLINKURL=http://chainlink-node-1:6688/
      - TERRA_URL=${NODE_URL}
    env_file:
      - ./external_initiator1.env

  external-initiator-2:
    <<: *ei-def
    environment:
      - EI_DATABASEURL=postgresql://postgres@postgres:5432/ei_2?sslmode=disable
      - EI_CHAINLINKURL=http://chainlink-node-2:6688/
      - TERRA_URL=${NODE_URL}
    env_file:
      - ./external_initiator2.env

  external-initiator-3:
    <<: *ei-def
    environment:
      - EI_DATABASEURL=postgresql://postgres@postgres:5432/ei_3?sslmode=disable
      - EI_CHAINLINKURL=http://chainlink-node-3:6688/
      - TERRA_URL=${NODE_URL}
    env_file:
      - ./external_initiator3.env

  price-adapter-1:
    <<: *price-adapter-def
    image: public.ecr.aws/chainlink-staging/adapters/coingecko-adapter:develop-latest
    ports:
      - "8083:8080"

  price-adapter-2:
    <<: *price-adapter-def
    image: public.ecr.aws/chainlink-staging/adapters/cryptoapis-adapter:develop-latest
    ports:
      - "8084:8080"
    environment:
      - "API_KEY=${CRYPTOAPIS_API_KEY}"

  price-adapter-3:
    <<: *price-adapter-def
    image: public.ecr.aws/chainlink-staging/adapters/cryptocompare-adapter:develop-latest
    ports:
      - "8085:8080"
    environment:
      - "API_KEY=${CRYPTOCOMPARE_API_KEY}"

  chain-adapter-1:
    <<: *chain-adapter-def
    ports:
      - "8086:8080"
    environment:
      - FCD_URL=${NODE_URL}
      - CHAIN_ID=${CHAIN_ID}
      - MNEMONIC=${ORACLE1}

  chain-adapter-2:
    <<: *chain-adapter-def
    ports:
      - "8087:8080"
    environment:
      - FCD_URL=${NODE_URL}
      - CHAIN_ID=${CHAIN_ID}
      - MNEMONIC=${ORACLE2}

  chain-adapter-3:
    <<: *chain-adapter-def
    ports:
      - "8088:8080"
    environment:
      - FCD_URL=${NODE_URL}
      - CHAIN_ID=${CHAIN_ID}
      - MNEMONIC=${ORACLE3}

volumes:
  pg: null
  cl: null
  chain: null
secrets:
  node_password:
    file: ./secrets/password.txt
  apicredentials:
    file: ./secrets/apicredentials
networks:
  terra:
    driver: bridge
